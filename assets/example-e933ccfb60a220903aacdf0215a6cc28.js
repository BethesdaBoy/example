"use strict";define("example/app",["exports","ember","example/resolver","ember-load-initializers","example/config/environment"],function(e,a,t,i,n){var r=void 0;a.default.MODEL_FACTORY_INJECTIONS=!0,r=a.default.Application.extend({modulePrefix:n.default.modulePrefix,podModulePrefix:n.default.podModulePrefix,Resolver:t.default}),(0,i.default)(r,n.default.modulePrefix),e.default=r}),define("example/components/app-version",["exports","ember-cli-app-version/components/app-version","example/config/environment"],function(e,a,t){var i=t.default.APP.name,n=t.default.APP.version;e.default=a.default.extend({version:n,name:i})}),define("example/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,a){e.default=a.default}),define("example/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,a){e.default=a.default}),define("example/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","example/config/environment"],function(e,a,t){e.default={name:"App Version",initialize:(0,a.default)(t.default.APP.name,t.default.APP.version)}}),define("example/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,a){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",a.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("example/initializers/data-adapter",["exports","ember"],function(e,a){e.default={name:"data-adapter",before:"store",initialize:a.default.K}}),define("example/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,a,t){e.default={name:"ember-data",initialize:a.default}}),define("example/initializers/export-application-global",["exports","ember","example/config/environment"],function(e,a,t){function i(){var e=arguments[1]||arguments[0];if(t.default.exportApplicationGlobal!==!1){var i,n=t.default.exportApplicationGlobal;i="string"==typeof n?n:a.default.String.classify(t.default.modulePrefix),window[i]||(window[i]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[i]}}))}}e.initialize=i,e.default={name:"export-application-global",initialize:i}}),define("example/initializers/injectStore",["exports","ember"],function(e,a){e.default={name:"injectStore",before:"store",initialize:a.default.K}}),define("example/initializers/store",["exports","ember"],function(e,a){e.default={name:"store",after:"ember-data",initialize:a.default.K}}),define("example/initializers/transforms",["exports","ember"],function(e,a){e.default={name:"transforms",before:"store",initialize:a.default.K}}),define("example/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,a){e.default={name:"ember-data",initialize:a.default}}),define("example/resolver",["exports","ember-resolver"],function(e,a){e.default=a.default}),define("example/router",["exports","ember","example/config/environment"],function(e,a,t){var i=a.default.Router.extend({location:t.default.locationType,rootURL:t.default.rootURL});i.map(function(){}),e.default=i}),define("example/services/ajax",["exports","ember-ajax/services/ajax"],function(e,a){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return a.default}})}),define("example/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template(function(){return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:1,column:0},end:{line:3,column:0}},moduleName:"example/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var a=e.createDocumentFragment(),t=e.createTextNode("Example Application\n");e.appendChild(a,t);var t=e.createComment("");e.appendChild(a,t);var t=e.createTextNode("\n");return e.appendChild(a,t),a},buildRenderNodes:function(e,a,t){var i=new Array(1);return i[0]=e.createMorphAt(a,1,1,t),i},statements:[["content","outlet",["loc",[null,[2,0],[2,10]]],0,0,0,0]],locals:[],templates:[]}}())}),define("example/config/environment",["ember"],function(e){var a="example";try{var t=a+"/config/environment",i=e.default.$('meta[name="'+t+'"]').attr("content"),n=JSON.parse(unescape(i));return{default:n}}catch(e){throw new Error('Could not read config from meta tag with name "'+t+'".')}}),runningTests||require("example/app").default.create({name:"example",version:"0.0.0+51192bc2"});